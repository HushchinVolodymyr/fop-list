from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

# Administrator keyboard
admin_menu = InlineKeyboardMarkup(
    inline_keyboard = [
        [
            InlineKeyboardButton(text="–î–æ–¥–∞—Ç–∏ –§–û–ü –∞–±–æ –¢–û–í‚ûï", callback_data="fop_tov_add")
        ],
        [
            InlineKeyboardButton(text="–†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ–πüìù", callback_data="refactor")
        ],
        [
            InlineKeyboardButton(text="–ó–Ω–∞–π—Ç–∏ –ø–æ –Ñ–î–†–ü–û–£üîç", callback_data="find_by_edrpoy")
        ],
        [
            InlineKeyboardButton(text="–û—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—óüíº", callback_data="organization")
        ]
    ]
)

# User keyboard
user_menu = InlineKeyboardMarkup(
    inline_keyboard = [
        [
            InlineKeyboardButton(text="–ó–Ω–∞–π—Ç–∏ –ø–æ –Ñ–î–†–ü–û–£üîç", callback_data="find_by_edrpoy")
        ],
        [
            InlineKeyboardButton(text="–û—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—óüíº", callback_data="organization")
        ]
    ]
)

# Main menu markup ( created for return from different handlers to main menu )
main_menu = InlineKeyboardMarkup(
    inline_keyboard = [
        [
            InlineKeyboardButton(text="–î–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—éüìÉ", callback_data="main_menu")
        ]
    ]
)

# Cancel menu markup ( created for cancel FSM States )
cancel_inline = InlineKeyboardMarkup(
    inline_keyboard = [
        [
          InlineKeyboardButton(text="–í—ñ–¥–º—ñ–Ω–∞‚ùå", callback_data="cancel")
        ]
    ]
)


# Administrator list objects menu ( function get "id" - id of organization  )
def create_admin_organization_list_markup(id):

    # Creating id numbers for next and priviouse objects
    forward = str(int(id) + 1)
    back = str(int(id) - 1)

    refactor_organization = InlineKeyboardMarkup(
        inline_keyboard = [
            [
                InlineKeyboardButton(text="–†–µ–¥–∞–≥—É–≤–∞—Ç–∏üìù", callback_data=f"refactor_organization:{id}")
            ],
            [
                InlineKeyboardButton(text="–í–∏–¥–∞–ª–∏—Ç–∏‚ùå", callback_data=f"delete_organization:{id}")
            ],
            [
                InlineKeyboardButton(text="–î–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—éüìÉ", callback_data="main_menu")
            ],
            [
                InlineKeyboardButton(text="‚è™ –ù–∞–∑–∞–¥", callback_data=f"back_organization:{back}"),
                InlineKeyboardButton(text="–í–ø–µ—Ä–µ–ª ‚è©", callback_data=f"forward_organization:{forward}")
            ]

        ]
    )

    # Return edited markup
    return refactor_organization


# User list objects menu ( function get "id" - id of organization  )
def create_user_organization_list_markup(id):

    # Creating id numbers for next and priviouse objects
    forward = str(int(id) + 1)
    back = str(int(id) - 1)

    refactor_organization = InlineKeyboardMarkup(
        inline_keyboard = [
            [
                InlineKeyboardButton(text="–î–æ–¥–∞—Ç–∏ –Ω–æ—Ç–∞—Ç–∫—É‚úèÔ∏è", callback_data=f"notion:{id}")
            ],
            [
                InlineKeyboardButton(text="–ù–µ –ø–æ–∫–∞–∑—É–≤–∞—Ç–∏ –¥–∞–ª—ñ‚õî", callback_data=f"not_show:{id}")
            ],
            [
                InlineKeyboardButton(text="–î–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—éüìÉ", callback_data="main_menu")
            ],
            [
                InlineKeyboardButton(text="‚è™ –ù–∞–∑–∞–¥", callback_data=f"back_organization:{back}"),
                InlineKeyboardButton(text="–í–ø–µ—Ä–µ–ª ‚è©", callback_data=f"forward_organization:{forward}")
            ]

        ]
    )

    # Return edited markup
    return refactor_organization


# Administrator refactoring menu ( function get "id" - id of organization  )
def create_refactor_list_markup(id):
    murkup = InlineKeyboardMarkup(
        inline_keyboard = [
            [
                InlineKeyboardButton(text="–ù–∞–≤–∑–∞ –∫–æ–º–ø–∞–Ω—ñ—ó", callback_data=f"ref:company_name:{id}")
            ],
            [
                InlineKeyboardButton(text="–ö–æ–¥ –ï–î–†–ü–û–£", callback_data=f"ref:edrpoy_code:{id}")
            ],
            [
                InlineKeyboardButton(text="–ü–Ü–ë –∫–æ–Ω—Ç–∞–∫–Ω–æ—ó –æ—Å–æ–±–∏", callback_data=f"ref:cont_name:{id}")
            ],
            [
                InlineKeyboardButton(text="–¢–µ–ª–µ–æ—Ñ–Ω –∫–æ–Ω—Ç–∞–∫–Ω–æ—ó –æ—Å–æ–±–∏", callback_data=f"ref:cont_phone_number:{id}")
            ],
            [
                InlineKeyboardButton(text="–ï–ª–µ–∫—Ç—Ä–æ–Ω–∞ –ø–æ—à—Ç–∞", callback_data=f"ref:email:{id}")
            ],
            [
                InlineKeyboardButton(text="–ê–¥—Ä–µ—Å–∞ –∫–æ–º–ø–∞–Ω—ñ—ó", callback_data=f"ref:adress:{id}")
            ],
            [
                InlineKeyboardButton(text="–ü–æ–∫–∞–∑–∞—Ç–∏/—Å–∫—Ä–∏—Ç–∏ –≤–≤–µ–¥—ñ—Ç—å 0 –∞–±–æ 1 (0 - –ø–æ–∫–∞–∑–∞—Ç–∏, 1 - —Å–∫—Ä–∏—Ç–∏)",
                                     callback_data=f"ref:is_checked:{id}")
            ],
            [
                InlineKeyboardButton(text="–ù–æ—Ç–∞—Ç–∫–∞", callback_data=f"ref:notion:{id}")
            ],
            [
                InlineKeyboardButton(text="–î–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—éüìÉ", callback_data="main_menu")
            ]
        ]
    )

    # Return edited markup
    return murkup